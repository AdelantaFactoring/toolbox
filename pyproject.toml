[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "adelanta-toolbox"
version = "1.0.3"
description = "Librería con arquitectura hexagonal para procesos financieros ETL"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Jimmy", email = "jimmy@outlook.com"},
]
maintainers = [
    {name = "Jimmy", email = "jimmy@outlook.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.3.0",
    "polars>=0.19.0",
    "pydantic>=2.0.0",
    "requests>=2.25.0",
    "python-dateutil>=2.8.0",
    "openpyxl>=3.0.0",
    "sqlalchemy>=1.4.0",
    "numpy>=1.20.0",
    "aiohttp>=3.8.0",
    "tenacity>=8.0.0",
    "rapidfuzz>=3.0.0",
    "xlsxwriter>=3.0.0",
    "pydantic-settings>=2.8.1",
    "httpx>=0.28.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pytest-cov>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

# URLs removidas temporalmente para evitar errores de validación

[tool.setuptools.packages.find]
# Automáticamente encuentra todos los paquetes

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short", 
    "--strict-markers",
    "--disable-warnings",
    "-p", "no:cacheprovider"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests"
]
# Configuración para asyncio
asyncio_default_fixture_loop_scope = "function"
# Evitar que pytest trate el directorio raíz como módulo
norecursedirs = ["__pycache__", "*.egg-info", ".git", ".venv"]
